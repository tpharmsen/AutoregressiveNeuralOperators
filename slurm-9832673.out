============================================================================================== 
Warning! Mixing Conda and module environments may lead to corruption of the
user environment. 
We do not recommend users mixing those two environments unless absolutely
necessary. Note that 
SURF does not provide any support for Conda environment.
For more information, please refer to our software policy page:
https://servicedesk.surf.nl/wiki/display/WIKI/Software+policy+Snellius#SoftwarepolicySnellius-UseofAnacondaandMinicondaenvironmentsonSnellius 

Remember that many packages have already been installed on the system and can
be loaded using 
the 'module load <package__name>' command. If you are uncertain if a package is
already available 
on the system, please use 'module avail' or 'module spider' to search for it.
============================================================================================== 
/var/spool/slurm/slurmd/job9832673/slurm_script: line 14: cd: AutoregressiveNeuralOperators: No such file or directory
wandb: Currently logged in as: tpharmsen (tpharmsen-tue) to https://api.wandb.ai. Use `wandb login --relogin` to force relogin
wandb: Using wandb-core as the SDK backend.  Please refer to https://wandb.me/wandb-core for more information.
wandb: Tracking run with wandb version 0.19.5
wandb: Run data is saved locally in /gpfs/home5/tharmsen/AutoregressiveNeuralOperators/wandb/run-20250209_025123-m4csj4sn
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run UNet_mod2_hpc_01DS4_8
wandb: ‚≠êÔ∏è View project at https://wandb.ai/tpharmsen-tue/BubbleML_DS_PF
wandb: üöÄ View run at https://wandb.ai/tpharmsen-tue/BubbleML_DS_PF/runs/m4csj4sn
dataloader ready
Amount of parameters in model: 5567316
UNet_mod2 initialized
start training
Traceback (most recent call last):
  File "/gpfs/home5/tharmsen/AutoregressiveNeuralOperators/src/train.py", line 20, in <module>
    trainer.train()
  File "/gpfs/home5/tharmsen/AutoregressiveNeuralOperators/src/trainers/PFTB.py", line 456, in train
    train_losses = self.train_one_epoch()
                   ^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home5/tharmsen/AutoregressiveNeuralOperators/src/trainers/PFTB.py", line 220, in train_one_epoch
    temp_pred, vel_pred, phase_pred = self.push_forward_trick(coords, temp, vel, phase, push_forward_steps)
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home5/tharmsen/AutoregressiveNeuralOperators/src/trainers/PFTB.py", line 201, in push_forward_trick
    temp_pred, vel_pred, phase_pred = self._forward_int(coords_input, temp_input, vel_input, phase_input)
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home5/tharmsen/AutoregressiveNeuralOperators/src/trainers/PFTB.py", line 186, in _forward_int
    pred = self.model(input)
           ^^^^^^^^^^^^^^^^^
  File "/home/tharmsen/.local/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1739, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/tharmsen/.local/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1750, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home5/tharmsen/AutoregressiveNeuralOperators/src/modelComp/UNetMod2.py", line 99, in forward
    skip_connection = self.apply_attention(x, skip_connection, self.attention_layers[i])
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/gpfs/home5/tharmsen/AutoregressiveNeuralOperators/src/modelComp/UNetMod2.py", line 80, in apply_attention
    attn_output, _ = attention_layer(skip, x, x)  # Apply attention
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/tharmsen/.local/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1739, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/tharmsen/.local/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1750, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/tharmsen/.local/lib/python3.11/site-packages/torch/nn/modules/activation.py", line 1373, in forward
    attn_output, attn_output_weights = F.multi_head_attention_forward(
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/tharmsen/.local/lib/python3.11/site-packages/torch/nn/functional.py", line 6373, in multi_head_attention_forward
    attn_output_weights = torch.bmm(q_scaled, k.transpose(-2, -1))
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 81.00 GiB. GPU 0 has a total capacity of 19.62 GiB of which 15.33 GiB is free. Process 54072 has 4.86 GiB memory in use. Including non-PyTorch memory, this process has 4.25 GiB memory in use. Of the allocated memory 3.78 GiB is allocated by PyTorch, and 262.59 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
[1;34mwandb[0m: 
[1;34mwandb[0m: üöÄ View run [33mUNet_mod2_hpc_01DS4_8[0m at: [34mhttps://wandb.ai/tpharmsen-tue/BubbleML_DS_PF/runs/m4csj4sn[0m
[1;34mwandb[0m: Find logs at: [1;35mwandb/run-20250209_025123-m4csj4sn/logs[0m

JOB STATISTICS
==============
Job ID: 9832673
Cluster: snellius
User/Group: tharmsen/tharmsen
State: FAILED (exit code 1)
Nodes: 1
Cores per node: 9
CPU Utilized: 00:00:29
CPU Efficiency: 11.11% of 00:04:21 core-walltime
Job Wall-clock time: 00:00:29
Memory Utilized: 2.12 MB
Memory Efficiency: 0.00% of 60.00 GB
