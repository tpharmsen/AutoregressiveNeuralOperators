import torch
import torch.nn as nn
import torch.nn.functional as F
from torch.utils.data import Dataset
import h5py


TEMPERATURE = 'temperature'
VELX = 'velx'
VELY = 'vely'
PRESSURE = 'pressure'


class FullLoaderBubbleML(Dataset):
    def __init__(self, filename):
        self.filename = filename
        self.data = h5py.File(self.filename, 'r')
        self.timesteps = self.data[TEMPERATURE][:].shape[0]
    
    def __len__(self):
        return self.timesteps - 1

    def _get_full(self):
        r"""
        The input is the temperature, x-velocity, and y-velocity at time == idx
        """
        temp = torch.from_numpy(self.data[TEMPERATURE])
        velx = torch.from_numpy(self.data[VELX])
        vely = torch.from_numpy(self.data[VELY])
        pres = torch.from_numpy(self.data[PRESSURE])
        
        return torch.stack((temp, velx, vely, pres), dim=0)
    
    def __getitem__(self):
        r"""
        As input, get temperature and velocities at time == idx.
        As the output label, get the temperature at time == idx + 1.
        """
        full = self._get_full()
        
        return full.numpy()